-- 1) resumo de contratos ativos

SELECT CL.NOME AS CLIENTE, U.LOTEAMENTO, U.QUADRA, U.LOTE, CO.VALOR_TOTAL FROM CLIENTES CL
	JOIN CONTRATOS CO ON CO.CLIENTE_ID = CL.CLIENTE_ID
	JOIN UNIDADES U ON CO.UNIDADE_ID = U.UNIDADE_ID
	
-- 2) Recebíveis em aberto

SELECT CL.CLIENTE_ID, CL.NOME, SUM(P.VALOR_PARCELA) AS SOMA_RECEBIVEIS FROM CONTRATOS CO
	JOIN CLIENTES CL ON CL.CLIENTE_ID = CO.CLIENTE_ID
	JOIN PARCELAS P ON P.CONTRATO_ID = CO.CONTRATO_ID
	WHERE P.STATUS = 'Vencida' OR P.STATUS = 'Pendente'
	GROUP BY CL.CLIENTE_ID, CL.NOME
	ORDER BY SOMA_RECEBIVEIS DESC
	
-- 3)Pagamentos por loteamento

SELECT U.LOTEAMENTO, SUM(P.VALOR_PAGO) AS TOTAL_PAGOS FROM PAGAMENTOS P
	JOIN PARCELAS PA ON P.PARCELA_ID = PA.PARCELA_ID
	JOIN CONTRATOS C ON PA.CONTRATO_ID = C.CONTRATO_ID
	JOIN UNIDADES U ON C.UNIDADE_ID = U.UNIDADE_ID
	WHERE P.DATA_PAGAMENTO >= CURRENT_DATE - INTERVAL '12 MONTHS'
	GROUP BY U.LOTEAMENTO;

-- 4) Parcelas Pagas com Atraso	
SELECT 
    CL.NOME AS NOME_CLIENTE,
    P.DATA_PAGAMENTO - PA.DATA_VENCIMENTO AS DIAS_ATRASO,
    P.VALOR_PAGO
FROM PAGAMENTOS P
	JOIN PARCELAS PA ON P.PARCELA_ID = PA.PARCELA_ID
	JOIN CONTRATOS C ON PA.CONTRATO_ID = C.CONTRATO_ID
	JOIN CLIENTES CL ON C.CLIENTE_ID = CL.CLIENTE_ID
	WHERE P.DATA_PAGAMENTO > PA.DATA_VENCIMENTO;

-- 5) Unidades com  Saldo Devedor

/* INSERT INTO PAGAMENTOS (PAGAMENTO_ID, PARCELA_ID, DATA_PAGAMENTO, VALOR_PAGO) VALUES 
(8, 2, CURRENT_DATE, 60000.00) */
SELECT 
	U.LOTEAMENTO, U.QUADRA, U.LOTE,
    SUM(PA.VALOR_PARCELA - COALESCE(
		(SELECT SUM(P.VALOR_PAGO) FROM PAGAMENTOS P 
         WHERE P.PARCELA_ID = PA.PARCELA_ID), 0)
	   ) AS SALDO_DEVEDOR
FROM PARCELAS pa
	JOIN CONTRATOS C ON pa.CONTRATO_ID = c.CONTRATO_ID
	JOIN UNIDADES U ON c.UNIDADE_ID = u.UNIDADE_ID
	WHERE PA.STATUS = 'Pendente' OR PA.STATUS = 'Vencida'
	GROUP BY U.LOTEAMENTO, U.QUADRA, U.LOTE;

-- 6) Parcelas em Contratos
SELECT PA.CONTRATO_ID, PA.PARCELA_ID, PA.STATUS FROM PARCELAS PA
	LEFT JOIN PAGAMENTOS P ON PA.PARCELA_ID = P.PARCELA_ID
	WHERE P.PARCELA_ID IS NULL;

-- 7) Clientes com Múltiplos Contratos

/* INSERT INTO CONTRATOS (CONTRATO_ID, CLIENTE_ID, UNIDADE_ID, DATA_CONTRATO, VALOR_TOTAL) VALUES 
(7, 1, 1, '2024-06-25', 9500000.00) */

SELECT CLI.CLIENTE_ID, CLI.NOME, COUNT(C.CONTRATO_ID) AS NUMERO_CONTRATOS
	FROM CLIENTES CLI
	JOIN CONTRATOS C ON CLI.CLIENTE_ID = C.CLIENTE_ID
	GROUP BY CLI.CLIENTE_ID, CLI.NOME
	HAVING COUNT(C.CONTRATO_ID) > 1;

-- 8) Recebíveis por Cliente
SELECT CLI.CLIENTE_ID, CLI.NOME,
    SUM(PA.VALOR_PARCELA - COALESCE(
		(SELECT SUM(P.VALOR_PAGO) FROM PAGAMENTOS P 
         WHERE P.PARCELA_ID = PA.PARCELA_ID), 0)
	   ) AS TOTAL_ABERTO
FROM  PARCELAS PA
	JOIN CONTRATOS C ON PA.CONTRATO_ID = C.CONTRATO_ID
	JOIN CLIENTES CLI ON c.CLIENTE_ID = CLI.CLIENTE_ID
	WHERE PA.STATUS = 'Pendente' OR PA.STATUS = 'Vencida'
	GROUP BY CLI.CLIENTE_ID, CLI.NOME
	HAVING 
		SUM(PA.VALOR_PARCELA - COALESCE(
			(SELECT SUM(P.VALOR_PAGO) FROM PAGAMENTOS P 
			 WHERE P.PARCELA_ID = PA.PARCELA_ID), 0)
		   ) > 50000;

-- 9) Contratos sem Parcelas ou Parcelas sem Pagamentos

SELECT C.CONTRATO_ID AS ID_CONTRATO, 'Contrato sem Parcela' AS TIPO FROM CONTRATOS C
	LEFT JOIN PARCELAS PA ON C.CONTRATO_ID = PA.CONTRATO_ID
	WHERE pa.CONTRATO_ID IS NULL

UNION ALL

SELECT PA.PARCELA_ID AS ID_PARCELA, 'Parcela sem Pagamento' AS TIPO FROM PARCELAS PA
	LEFT JOIN PAGAMENTOS P ON PA.PARCELA_ID = P.PARCELA_ID
	WHERE P.PARCELA_ID IS NULL;

-- 10) Parcela de Maior Valor e Ranking por Contrato

/* INSERT INTO PARCELAS (PARCELA_ID, CONTRATO_ID, DATA_VENCIMENTO, VALOR_PARCELA, STATUS) VALUES 
(11, 1, '2024-12-02', 90000.00, 'Pendente') */

WITH ParcelasRanking AS (
    SELECT PA.CONTRATO_ID, PA.PARCELA_ID, PA.VALOR_PARCELA,
        RANK() OVER (PARTITION BY PA.CONTRATO_ID ORDER BY PA.VALOR_PARCELA DESC) AS RANKING
    FROM PARCELAS PA
)
SELECT CONTRATO_ID, PARCELA_ID, VALOR_PARCELA, RANKING 
	FROM ParcelasRanking;
